name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number to apply to the binary
        required: true
  
  
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .\msvc\UnrealBuildConfigurator.sln

jobs:
  create-draft-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "UnrealBuildConfigurator.v${{ github.event.inputs.version }}"
          release_name: "UnrealBuildConfigurator.v${{ github.event.inputs.version }}"
          draft: true
          prerelease: false
    outputs:
      release-id: ${{ steps.create_release.outputs.id }}
      release-url: ${{ steps.create_release.outputs.upload_url }}
      
  build:
    runs-on: windows-2019
    needs: [create-draft-release]
    strategy:
      matrix:
        build-platform: ["x86", "x64"]
        build-configuration: ["Release"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      id: build
      uses: ./.github/actions/build
      with:
        platform: ${{ matrix.build-platform }}
        configuration: ${{ matrix.build-configuration }}
        solution-path: ${{ env.SOLUTION_FILE_PATH }}
    
    - name: Package
      run: |
        Compress-Archive -Path ${{ steps.build.path-to-binary }} -DestinationPath UnrealBuildConfigurator.${{ matrix.build-platform }}.zip
    
    - name: Upload
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-draft-release.outputs.release-url }}
        asset_path: UnrealBuildConfigurator.${{ matrix.build-platform }}.zip
        asset_name: UnrealBuildConfigurator.${{ matrix.build-platform }}.zip
        asset_content_type: application/zip

  publish-draft:
    name: Publish Draft Release
    runs-on: ubuntu-latest
    needs: [create-draft-release, build]
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-draft-release.outputs.release-id }}